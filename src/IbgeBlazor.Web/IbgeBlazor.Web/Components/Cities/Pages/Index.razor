@page "/cities"
@using IbgeBlazor.Core.LocalityContext.Services
@using IbgeBlazor.Api.Endpoints.Localities
@using IbgeBlazor.Core.LocalityContext.DataModels.Cities
@inject ICitiesService _citiesService
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Cities</PageTitle>

<h1>Cidades</h1>

<div>
    <div class="row d-flex justify-content-between p-2" >
        <div class="col-md-2">
            
        </div>
        <div class="col-md-4" >
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
                <div class="input-group-prepend">
                    <button class="btn btn-outline-secondary" type="button" id="button-addon1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                        </svg>
                    </button>
                </div>
            </div>

        </div>
    </div>
   
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>IBGE</th>
                    <th>Cidade</th>
                    <th>Estado</th>
                <th>
                    <a class="btn btn-primary float-end" href="/cities/create">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                </svg> Novo
            </a></th>
                </tr>
            </thead>
            <tbody>
            @if (cities == null)
            {
                <tr class="mx-auto">
                    <td colspan="4" class="w-100">
                        <div class="spinner-border mx-auto" role="status">
                            <span class="sr-only"></span>
                        </div>
                    </td>
                </tr>
            }
            else if(cities.Count == 0)
            {
                <tr class="mx-auto">
                    <td colspan="4" class="w-100">
                        Nenhuma cidade foi encontrada.
                    </td>
                </tr>
            }
            else
            {
                @foreach (var city in cities.Skip(Skip).Take(PageSize))
                {
                    <tr>
                        <td>@city.IbgeCode</td>
                        <td>@city.Name</td>
                        <td>@city.State?.Description - @city.State?.Uf</td>
                        <td class="d-flex justify-content-end">
                            <a class="btn btn-info btn-sm mx-1" href="/cities/details/@city.IbgeCode">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-text" viewBox="0 0 16 16">
                                    <path d="M5.5 7a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5" />
                                    <path d="M9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.5zm0 1v2A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1z" />
                                </svg>
                            </a>
                            <a class="btn btn-primary btn-sm mx-1" href="/cities/edit/@city.IbgeCode"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
  <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"/>
</svg></a>
                            <button class="btn btn-danger btn-sm mx-1" @onclick="() => DeleteCity(city!.IbgeCode!)">

                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                                  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            }
            </tbody>
       
        </table>
         @if(true)
        {
           <div class="d-flex justify-content-end">
               <div class="btn-group btn-group-sm" role="group" aria-label="pagination">
                   <button type="button" class="btn btn-secondary" @onclick="() => --Page" disabled="() => Page == 1">Anterior</button>
                   <button type="button" class="btn btn-secondary" @onclick="() => TryGetNextList(Page + 1)" disabled="() => Page > 1 && isUltimaPagina">Proximo</button>
               </div>
           </div>
        }

    @code {

        private int Page { get; set; } = 1;
        private int PageCount { get; set; } = 0;
        private int PageSize { get; set; } = 10;

        private int Skip => Page > 1 ? (Page * PageSize) : 0;

        private bool isUltimaPagina { get; set; }

        private List<CityModel>? cities;
        protected override async Task OnInitializedAsync()
        {
            await TryGetNextList(Page);

        }

        private async Task TryGetNextList(int nextPage)
        {

            if (nextPage <= PageCount)
                return;

            Page = nextPage;

            var modelResult = await _citiesService.ListCities(new PagingDataModel(nextPage, PageSize));

            if(modelResult?.Success is false || modelResult?.Data?.Any() is false)
            {
                isUltimaPagina = true;
            }

            if(modelResult?.Success is true)
            {
                if(cities == null)
                {
                    cities = modelResult.Data!.ToList<CityModel>();

                }
                else
                {
                    cities.AddRange(modelResult.Data!);
                }
                
            }
            else
            {
                cities = new List<CityModel>();
            }

            if(!isUltimaPagina)
              PageCount = nextPage;
        }

        private async Task DeleteCity(string ibgeCode)
        {
            var cityToRemove = cities!.FirstOrDefault(c => c.IbgeCode == ibgeCode);
            var result = await _citiesService.DeleteCity(ibgeCode);

            if (result?.Success is true)
            {
                cities!.Remove(cityToRemove!);
            }
           
        }
    }
</div>

