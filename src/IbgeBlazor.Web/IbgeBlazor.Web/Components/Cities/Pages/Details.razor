@page "/cities/details/{ibgeCode}"
@using IbgeBlazor.Api.Endpoints.Localities
@using IbgeBlazor.Core.LocalityContext.DataModels.Cities
@using IbgeBlazor.Core.LocalityContext.Services
@inject ICitiesService _citiesService
@inject NavigationManager NavigationManager


<div class="card">
    <h2 class="card-header">Detalhes da Cidade</h2>
        @if (@CityDetails == null)
        {
            <p>Loading...</p>
        }
        else
        {
    <div class="card-body">
            <h5 class="card-title">@CityDetails?.IbgeCode</h5>
            <p class="card-text"><strong>Nome da Cidade:</strong> @CityDetails?.Name - @CityDetails?.State?.Uf </p>
    </div>
    <div class="card-footer d-flex justify-content-between">
        <a type="button" class="btn btn-secondary" href="/cities">Voltar</a>
        <a type="button" class="btn btn-primary" href="/cities/edit/@CityDetails.IbgeCode">Editar</a>
    </div>
        }
</div>

@code {

    private CityModel? CityDetails { get; set; } = null!;

    [Parameter]
    public string IbgeCode { get; set; } = null!;


    protected override async Task OnInitializedAsync()
    {
        var results = await _citiesService.GetCityDetails(IbgeCode);

        if (results?.Success is true)
            CityDetails = results.Data!;
    }
}
